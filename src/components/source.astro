---
import { FaGithub } from 'react-icons/fa/index';

import { SpecialButton } from './special-button';
import { Container } from './container';
import Binary from './binary.astro';
---

<div class="source">
  <Container>
    <div class="wrapper">
      <div class="iconContainer">
        <div class="tail"></div>
        <div class="icon">
          <FaGithub />
        </div>
      </div>

      <h2 class="title">
        <span data-lang="en">Open Source</span>
        <span data-lang="zh">开源项目</span>
      </h2>
      <p class="desc">
        <span data-lang="en">Moodist is free and open-source!</span>
        <span data-lang="zh">Moodist免费且开源！</span>
      </p>

      <div class="button">
        <SpecialButton href="https://github.com/remvze/moodist">
          <span data-lang="en">Source Code</span>
          <span data-lang="zh">源代码</span>
        </SpecialButton>
      </div>

      <div class="binary"><Binary /></div>
    </div>
  </Container>
</div>

<script>
  // Language switching logic
  function getCurrentLanguage() {
    if (typeof window !== 'undefined' && window.localStorage) {
      try {
        return localStorage.getItem('moodist-language') || 'en';
      } catch {
        return 'en';
      }
    }
    return 'en';
  }

  function updateLanguageDisplay(lang) {
    const elements = document.querySelectorAll(`[data-lang="${lang}"]`);
    elements.forEach(el => {
      if (el instanceof HTMLElement) {
        el.style.display = 'block';
      }
    });
    
    const otherElements = document.querySelectorAll(`[data-lang="${lang === 'en' ? 'zh' : 'en'}"]`);
    otherElements.forEach(el => {
      if (el instanceof HTMLElement) {
        el.style.display = 'none';
      }
    });
  }
  
  // Initialize with current language
  document.addEventListener('DOMContentLoaded', () => {
    const currentLang = getCurrentLanguage();
    updateLanguageDisplay(currentLang);
    
    // Listen for language changes from other components
    window.addEventListener('languageChanged', (event) => {
      updateLanguageDisplay(event.detail.language);
    });
  });
</script>

<style>
  .source {
    margin-top: 40px;

    & .wrapper {
      position: relative;
      padding: 0 20px 40px;
      overflow: hidden;
      background: linear-gradient(transparent, rgb(24 24 27 / 70%));
      border-radius: 0 0 20px 20px;

      & .binary {
        position: absolute;
        bottom: -2.1rem;
        left: 50%;
        width: calc(100% + 10px);
        height: 200px;
        overflow: hidden;
        font-family: 'Nimbus Mono PS', 'Courier New', monospace;
        color: var(--color-foreground-subtler);
        word-break: break-all;
        pointer-events: none;
        cursor: default;
        user-select: none;
        opacity: 0.35;
        mask-image: linear-gradient(transparent, #000);
        transform: translateX(-50%);
      }

      &::after {
        position: absolute;
        bottom: 0;
        left: 50%;
        width: 70%;
        height: 1px;
        content: '';
        background: linear-gradient(
          90deg,
          transparent,
          var(--color-neutral-400),
          transparent
        );
        transform: translateX(-50%);
      }
    }

    & .iconContainer {
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-bottom: 15px;

      & .tail {
        width: 1px;
        height: 75px;
        background: linear-gradient(transparent, var(--color-neutral-300));
      }

      & .icon {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 45px;
        height: 45px;
        font-size: var(--font-md);
        background: linear-gradient(
          var(--color-neutral-50),
          var(--color-neutral-100)
        );
        border: 1px solid var(--color-neutral-300);
        border-radius: 50%;
      }
    }

    & .title {
      font-family: var(--font-display);
      font-size: var(--font-lg);
      font-weight: 600;
      text-align: center;

      & span {
        background: linear-gradient(
          135deg,
          var(--color-foreground),
          var(--color-foreground-subtle)
        );
        background-clip: text;
        -webkit-text-fill-color: transparent;
      }
    }

    & .desc {
      margin-top: 8px;
      color: var(--color-foreground-subtle);
      text-align: center;
    }

    .button {
      display: flex;
      justify-content: center;
      margin: 16px auto 0;
    }
  }
</style>
